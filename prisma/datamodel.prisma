type User {
	id: ID! @id @unique
	createdAt: DateTime! @createdAt
	updatedAt: DateTime @updatedAt
	firstName: String!
	lastName: String!
	timezone: String!
	email: String! @unique
	mobilePhone: String
	passwordSalt: String!
	passwordHash: String!
	isVerified: Boolean!
	challenge: String
	profiles: [Profile!]!
	sessions: [Session!]!
	tags: [Tag!]!
}

type Session {
	id: ID! @id @unique
	createdAt: DateTime! @createdAt
	updatedAt: DateTime @updatedAt
	csrfToken: String! @unique
	authToken: String! @unique
	validTo: DateTime!
	timedOut: DateTime
	loggedOut: DateTime
	user: User!
	profile: Profile!
	location: Location
	ipAddress: String!
}

type Profile {
	id: ID! @id @unique
	createdAt: DateTime! @createdAt
	updatedAt: DateTime @updatedAt
	owner: User!
	name: String!
	timezone: String
	status: ProfileStatus!
	location: Location
	type: ProfileType!
	isHidden: Boolean!
	isBot: Boolean!
	slogan: String
	pictureAvatar: String!
	pictureBanner: String
	memberships: [Membership!]! @relation(name: "Memberships", link: TABLE)
	invitations: [Membership!]! @relation(name: "Invitations", link: TABLE)
	tags: [Tag!]!
}

enum ProfileType {
	PRIVATE
	BUSINESS
}

enum ProfileStatus {
	OFFLINE
	DO_NOT_DISTURB
	AWAY
	ONLINE
}

type Group {
	id: ID! @id @unique
	createdAt: DateTime! @createdAt
	updatedAt: DateTime @updatedAt
	owner: Profile!
    type: GroupType!
	name: String!
	title: String
	description: String
	tags: [Tag!]!
	logo: String!
	banner: String
	isPublic: Boolean!
	members: [Membership!]!
	entries: [Entry!]!
	location: Location
}

enum GroupType {
    PRIVATE
    ONE_ON_ONE
    ROOM
}

type Membership {
	id: ID! @id @unique
	createdAt: DateTime! @createdAt
	updatedAt: DateTime @updatedAt
	status: MembershipStatus!
	creator: Profile! @relation(name: "Creator", link: TABLE)
	group: Group!
	member: Profile! @relation(name: "Member", link: TABLE)
	showHistory: Boolean!
}

enum MembershipStatus {
    BLOCKED
    PENDING
    PUBLIC
    ACTIVE
}

type Entry {
    id: ID! @id @unique
 	type: EntryType!
    eventId: String
    appId: String
 	createdAt: DateTime! @createdAt
 	owner: Profile!
 	name:String!
 	content: Json
 	location: Location!
	tags: [Tag!]!
}

enum EntryType {
    EMPTY
    DATA_JSON
    DATA_TABLE
    DATA_DOCUMENT
    DATA_PICTURE
    DATA_FILE
}

type Tag {
   	id: ID! @id @unique
   	createdAt: DateTime! @createdAt
	owner: Profile!
	type: String!
   	value: String!
}

type Location {
	id: ID! @id @unique
	createdAt: DateTime! @createdAt
	updatedAt: DateTime! @updatedAt
	owner: Profile!
	type: LocationType!
	name: String
	tags: [Tag!]!
	address: String
	addressCity: String
	addressZipCode: String
	addressCountry: String
	geoPointLatitude: Float
	geoPointLongitude: Float
	geoPointRadiusMeter: Float
}

enum LocationType {
    OSM_NODE
    GEO_POINT
    ADDRESS
}