version: '3'
networks:
  abis:
    driver: bridge

services:

  frontend:
    container_name: frontend
    restart: always
    depends_on:
      - yoga
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - abis

  yoga:
    container_name: yoga
    build:
      context: yoga-server
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - prisma
    networks:
      - abis
    ports:
      - "4000:4000"


  prisma:
    container_name: prisma
    build:
      context: prisma
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    networks:
      - abis
    ports:
      - "4466:4466"

    environment:
      PRISMA_CONFIG: |
        managementApiSecret: managementApiSecret
        port: 4466
        databases:
          default:
            connector: postgres
            migrations: true
            host: db
            port: 5432
            user: postgres
            password: prisma

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: test
    volumes:
      - ./pgadmin:/root/.pgadmin

    ports:
      - "8080:8080"

    networks:
      - abis
    depends_on:
      - db
    restart: always


  db:
    container_name: db
    build:
      context: db #restapiexample #postgresapp    # Use an image built from the specified dockerfile in the `api` directory.
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    restart: always
    networks:
      - abis
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: prisma
    volumes:
      - postgres_data:/var/lib/postgresql/data
volumes:
  postgres_data: